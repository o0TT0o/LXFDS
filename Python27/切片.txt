
取一个list或tuple的部分元素是非常常见的操作。比如，一个list如下：
取前3个元素，应该怎么做？
笨办法：
之所以是笨办法是因为扩展一下，取前N个元素就没辙了。
取前N个元素，也就是索引为0-(N-1)的元素，可以用循环：
对这种经常取指定索引范围的操作，用循环十分繁琐，因此，Python提供了切片（Slice）操作符，能大大简化这种操作。
对应上面的问题，取前3个元素，用一行代码就可以完成切片：
L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2，正好是3个元素。
如果第一个索引是0，还可以省略：
也可以从索引1开始，取出2个元素出来：
类似的，既然Python支持L[-1]取倒数第一个元素，那么它同样支持倒数切片，试试：
记住倒数第一个元素的索引是-1。
切片操作十分有用。我们先创建一个0-99的数列：
可以通过切片轻松取出某一段数列。比如前10个数：
后10个数：
前11-20个数：
前10个数，每两个取一个：
所有数，每5个取一个：
甚至什么都不写，只写[:]就可以原样复制一个list：
tuple也是一种list，唯一区别是tuple不可变。因此，tuple也可以用切片操作，只是操作的结果仍是tuple：
字符串'xxx'也可以看成是一种list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果仍是字符串：
在很多编程语言中，针对字符串提供了很多各种截取函数（例如，substring），其实目的就是对字符串切片。Python没有针对字符串的截取函数，只需要切片一个操作就可以完成，非常简单。
有了切片操作，很多地方循环就不再需要了。Python的切片非常灵活，一行代码就可以实现很多行循环才能完成的操作。
do_slice.py